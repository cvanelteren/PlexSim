{
  "_args": [
    [
      "p-defer@1.0.0",
      "/Users/mperrotte/npminc/cli"
    ]
  ],
  "_development": true,
  "_from": "p-defer@1.0.0",
  "_id": "p-defer@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww=",
  "_location": "/npm/p-defer",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "p-defer@1.0.0",
    "name": "p-defer",
    "escapedName": "p-defer",
    "rawSpec": "1.0.0",
    "saveSpec": null,
    "fetchSpec": "1.0.0"
  },
  "_requiredBy": [
    "/npm/map-age-cleaner"
  ],
  "_resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",
  "_shrinkwrap": null,
  "_spec": "1.0.0",
  "_where": "/Users/mperrotte/npminc/cli",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-defer/issues"
  },
  "dependencies": {},
  "description": "Create a deferred promise",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/p-defer#readme",
  "keywords": [
    "promise",
    "defer",
    "deferred",
    "resolve",
    "reject",
    "lazy",
    "later",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "name": "p-defer",
  "optionalDependencies": {},
  "readme": "# p-defer [![Build Status](https://travis-ci.org/sindresorhus/p-defer.svg?branch=master)](https://travis-ci.org/sindresorhus/p-defer)\n\n> Create a deferred promise\n\n[**Don't use this unless you know what you're doing!**](https://github.com/petkaantonov/bluebird/wiki/Promise-anti-patterns#the-deferred-anti-pattern) Prefer the `Promise` constructor.\n\n\n## Install\n\n```\n$ npm install --save p-defer\n```\n\n\n## Usage\n\n```js\nconst pDefer = require('p-defer');\n\nfunction delay(ms) {\n\tconst deferred = pDefer();\n\tsetTimeout(deferred.resolve, ms, 'ðŸ¦„');\n\treturn deferred.promise;\n}\n\ndelay(100).then(console.log);\n//=> 'ðŸ¦„'\n```\n\n*The above is just an example. Use [`delay`](https://github.com/sindresorhus/delay) if you need to delay a promise.*\n\n\n## API\n\n### pDefer()\n\nReturns an `Object` with a `promise` property and functions to `resolve()` and `reject()`.\n\n\n## Related\n\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-defer.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.0.0",
  "xo": {
    "esnext": true
  }
}
